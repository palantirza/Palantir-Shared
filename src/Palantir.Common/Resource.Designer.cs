//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Palantir.Common {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Resource() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Palantir.Common.Resource", typeof(Resource).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index was out of range. Must be non-negative and less than the size of the collection..
        /// </summary>
        public static string ArgumentOutOfRange_Index {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Non-negative number required..
        /// </summary>
        public static string ArgumentOutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Destination array is not ong enough to copy all the items in the collection. Check array index and length..
        /// </summary>
        public static string CopyTo_ArgumentsTooSmall {
            get {
                return ResourceManager.GetString("CopyTo_ArgumentsTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified TValueCollection creates collections that have IsReadOnly set to True by default. TValueCollection must be a mutable collection..
        /// </summary>
        public static string Create_TValueCollectionReadOnly {
            get {
                return ResourceManager.GetString("Create_TValueCollectionReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Type &apos;{0}&apos; is a concrete type, event messages can only be interfaces..
        /// </summary>
        public static string Err_EventMessageCannotBeConcreteType {
            get {
                return ResourceManager.GetString("Err_EventMessageCannotBeConcreteType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The event message contains type &apos;{0}&apos;, not type &apos;{1}&apos; as requested..
        /// </summary>
        public static string Err_EventMessageNotOfIndicatedType {
            get {
                return ResourceManager.GetString("Err_EventMessageNotOfIndicatedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The event stream has changed since it was last accessed..
        /// </summary>
        public static string Err_EventStreamChangedSinceCreation {
            get {
                return ResourceManager.GetString("Err_EventStreamChangedSinceCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid format for the {0}..
        /// </summary>
        public static string Err_InvalidFormatFor {
            get {
                return ResourceManager.GetString("Err_InvalidFormatFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The PagedList Async methods require RavenQueryables.
        /// </summary>
        public static string Err_PagedListAsyncRequiresRaven {
            get {
                return ResourceManager.GetString("Err_PagedListAsyncRequiresRaven", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enumeration already finished..
        /// </summary>
        public static string InvalidOperation_EnumEnded {
            get {
                return ResourceManager.GetString("InvalidOperation_EnumEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Collection was modified; enumeration operation may not execute..
        /// </summary>
        public static string InvalidOperation_EnumFailedVersion {
            get {
                return ResourceManager.GetString("InvalidOperation_EnumFailedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enumeration not started. Call MoveNext..
        /// </summary>
        public static string InvalidOperation_EnumNotStarted {
            get {
                return ResourceManager.GetString("InvalidOperation_EnumNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection is read-only..
        /// </summary>
        public static string ReadOnly_Modification {
            get {
                return ResourceManager.GetString("ReadOnly_Modification", resourceCulture);
            }
        }
    }
}
